<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>mutex_unlock (40 samples, 0.07%)</title><rect x="240.4" y="101" width="0.7" height="15.0" fill="rgb(239,30,13)" rx="2" ry="2" />
<text  x="243.36" y="111.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,889 samples, 6.51%)</title><rect x="257.0" y="165" width="76.8" height="15.0" fill="rgb(213,167,19)" rx="2" ry="2" />
<text  x="259.97" y="175.5" >syscall_..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (14 samples, 0.02%)</title><rect x="209.5" y="181" width="0.3" height="15.0" fill="rgb(251,149,35)" rx="2" ry="2" />
<text  x="212.54" y="191.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (572 samples, 0.96%)</title><rect x="752.2" y="133" width="11.3" height="15.0" fill="rgb(223,181,44)" rx="2" ry="2" />
<text  x="755.24" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (8 samples, 0.01%)</title><rect x="35.5" y="197" width="0.1" height="15.0" fill="rgb(236,48,3)" rx="2" ry="2" />
<text  x="38.46" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (11 samples, 0.02%)</title><rect x="255.3" y="117" width="0.2" height="15.0" fill="rgb(217,219,6)" rx="2" ry="2" />
<text  x="258.31" y="127.5" ></text>
</g>
<g >
<title>[udp-sniff] (30 samples, 0.05%)</title><rect x="10.0" y="229" width="0.6" height="15.0" fill="rgb(237,54,47)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (14 samples, 0.02%)</title><rect x="1138.2" y="213" width="0.2" height="15.0" fill="rgb(236,9,18)" rx="2" ry="2" />
<text  x="1141.16" y="223.5" ></text>
</g>
<g >
<title>provider_retrieve_stat1 (84 samples, 0.14%)</title><rect x="599.7" y="213" width="1.6" height="15.0" fill="rgb(210,137,52)" rx="2" ry="2" />
<text  x="602.67" y="223.5" ></text>
</g>
<g >
<title>_nv033085rm (26 samples, 0.04%)</title><rect x="669.3" y="213" width="0.6" height="15.0" fill="rgb(212,185,7)" rx="2" ry="2" />
<text  x="672.35" y="223.5" ></text>
</g>
<g >
<title>fput (15 samples, 0.03%)</title><rect x="706.1" y="149" width="0.3" height="15.0" fill="rgb(247,81,33)" rx="2" ry="2" />
<text  x="709.13" y="159.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.01%)</title><rect x="1060.6" y="101" width="0.1" height="15.0" fill="rgb(249,210,8)" rx="2" ry="2" />
<text  x="1063.59" y="111.5" ></text>
</g>
<g >
<title>provide_stats (51 samples, 0.09%)</title><rect x="598.7" y="213" width="1.0" height="15.0" fill="rgb(253,18,35)" rx="2" ry="2" />
<text  x="601.67" y="223.5" ></text>
</g>
<g >
<title>__libc_write (101 samples, 0.17%)</title><rect x="1136.4" y="229" width="2.0" height="15.0" fill="rgb(241,202,32)" rx="2" ry="2" />
<text  x="1139.45" y="239.5" ></text>
</g>
<g >
<title>__GI___mq_timedreceive (8,486 samples, 14.21%)</title><rect x="11.5" y="213" width="167.6" height="15.0" fill="rgb(205,89,48)" rx="2" ry="2" />
<text  x="14.50" y="223.5" >__GI___mq_timedreceive</text>
</g>
<g >
<title>fput_many (33 samples, 0.06%)</title><rect x="64.7" y="133" width="0.6" height="15.0" fill="rgb(254,100,27)" rx="2" ry="2" />
<text  x="67.66" y="143.5" ></text>
</g>
<g >
<title>__entry_text_start (914 samples, 1.53%)</title><rect x="17.3" y="197" width="18.0" height="15.0" fill="rgb(214,75,14)" rx="2" ry="2" />
<text  x="20.29" y="207.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (17 samples, 0.03%)</title><rect x="41.4" y="181" width="0.3" height="15.0" fill="rgb(206,184,48)" rx="2" ry="2" />
<text  x="44.37" y="191.5" ></text>
</g>
<g >
<title>__check_object_size (7 samples, 0.01%)</title><rect x="723.6" y="53" width="0.1" height="15.0" fill="rgb(250,127,48)" rx="2" ry="2" />
<text  x="726.55" y="63.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 0.13%)</title><rect x="1136.6" y="213" width="1.5" height="15.0" fill="rgb(237,26,42)" rx="2" ry="2" />
<text  x="1139.56" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,304 samples, 10.55%)</title><rect x="452.0" y="197" width="124.5" height="15.0" fill="rgb(239,78,43)" rx="2" ry="2" />
<text  x="454.97" y="207.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (25 samples, 0.04%)</title><rect x="333.3" y="149" width="0.5" height="15.0" fill="rgb(240,93,54)" rx="2" ry="2" />
<text  x="336.30" y="159.5" ></text>
</g>
<g >
<title>fput_many (44 samples, 0.07%)</title><rect x="706.4" y="149" width="0.9" height="15.0" fill="rgb(235,35,52)" rx="2" ry="2" />
<text  x="709.43" y="159.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (11 samples, 0.02%)</title><rect x="253.4" y="53" width="0.2" height="15.0" fill="rgb(213,111,29)" rx="2" ry="2" />
<text  x="256.42" y="63.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (120 samples, 0.20%)</title><rect x="723.5" y="85" width="2.4" height="15.0" fill="rgb(238,68,29)" rx="2" ry="2" />
<text  x="726.52" y="95.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (133 samples, 0.22%)</title><rect x="334.2" y="181" width="2.6" height="15.0" fill="rgb(206,111,2)" rx="2" ry="2" />
<text  x="337.19" y="191.5" ></text>
</g>
<g >
<title>fsnotify (62 samples, 0.10%)</title><rect x="254.1" y="85" width="1.2" height="15.0" fill="rgb(230,29,37)" rx="2" ry="2" />
<text  x="257.09" y="95.5" ></text>
</g>
<g >
<title>__libc_recvfrom (27,023 samples, 45.24%)</title><rect x="602.6" y="229" width="533.8" height="15.0" fill="rgb(218,181,30)" rx="2" ry="2" />
<text  x="605.62" y="239.5" >__libc_recvfrom</text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.01%)</title><rect x="1060.6" y="117" width="0.1" height="15.0" fill="rgb(227,202,23)" rx="2" ry="2" />
<text  x="1063.59" y="127.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2,256 samples, 3.78%)</title><rect x="763.5" y="149" width="44.6" height="15.0" fill="rgb(236,53,2)" rx="2" ry="2" />
<text  x="766.54" y="159.5" >sock..</text>
</g>
<g >
<title>raw_recvmsg (1,753 samples, 2.93%)</title><rect x="716.1" y="117" width="34.6" height="15.0" fill="rgb(254,7,29)" rx="2" ry="2" />
<text  x="719.07" y="127.5" >ra..</text>
</g>
<g >
<title>consume_skb (13 samples, 0.02%)</title><rect x="725.9" y="85" width="0.3" height="15.0" fill="rgb(234,46,28)" rx="2" ry="2" />
<text  x="728.95" y="95.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (681 samples, 1.14%)</title><rect x="736.1" y="69" width="13.5" height="15.0" fill="rgb(221,82,54)" rx="2" ry="2" />
<text  x="739.14" y="79.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (36 samples, 0.06%)</title><rect x="812.5" y="165" width="0.7" height="15.0" fill="rgb(215,133,36)" rx="2" ry="2" />
<text  x="815.49" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (24 samples, 0.04%)</title><rect x="1137.6" y="181" width="0.4" height="15.0" fill="rgb(232,199,33)" rx="2" ry="2" />
<text  x="1140.57" y="191.5" ></text>
</g>
<g >
<title>__fdget (900 samples, 1.51%)</title><rect x="467.5" y="117" width="17.8" height="15.0" fill="rgb(240,49,24)" rx="2" ry="2" />
<text  x="470.52" y="127.5" ></text>
</g>
<g >
<title>rw_verify_area (33 samples, 0.06%)</title><rect x="234.5" y="133" width="0.7" height="15.0" fill="rgb(244,127,41)" rx="2" ry="2" />
<text  x="237.53" y="143.5" ></text>
</g>
<g >
<title>check_request (119 samples, 0.20%)</title><rect x="427.5" y="213" width="2.3" height="15.0" fill="rgb(230,190,36)" rx="2" ry="2" />
<text  x="430.47" y="223.5" ></text>
</g>
<g >
<title>pipe_write (18 samples, 0.03%)</title><rect x="1137.1" y="117" width="0.3" height="15.0" fill="rgb(212,143,20)" rx="2" ry="2" />
<text  x="1140.08" y="127.5" ></text>
</g>
<g >
<title>pipe_read (16 samples, 0.03%)</title><rect x="246.9" y="117" width="0.3" height="15.0" fill="rgb(226,210,36)" rx="2" ry="2" />
<text  x="249.90" y="127.5" ></text>
</g>
<g >
<title>__lock_text_start (18 samples, 0.03%)</title><rect x="735.8" y="69" width="0.3" height="15.0" fill="rgb(248,149,13)" rx="2" ry="2" />
<text  x="738.78" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (233 samples, 0.39%)</title><rect x="156.4" y="197" width="4.6" height="15.0" fill="rgb(238,215,38)" rx="2" ry="2" />
<text  x="159.44" y="207.5" ></text>
</g>
<g >
<title>skb_recv_datagram (35 samples, 0.06%)</title><rect x="750.7" y="117" width="0.7" height="15.0" fill="rgb(231,85,27)" rx="2" ry="2" />
<text  x="753.70" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,905 samples, 31.65%)</title><rect x="688.7" y="197" width="373.4" height="15.0" fill="rgb(233,102,52)" rx="2" ry="2" />
<text  x="691.67" y="207.5" >do_syscall_64</text>
</g>
<g >
<title>syscall_enter_from_user_mode (39 samples, 0.07%)</title><rect x="1062.1" y="197" width="0.8" height="15.0" fill="rgb(229,151,0)" rx="2" ry="2" />
<text  x="1065.13" y="207.5" ></text>
</g>
<g >
<title>do_mq_getsetattr (1,121 samples, 1.88%)</title><rect x="464.2" y="133" width="22.1" height="15.0" fill="rgb(243,56,38)" rx="2" ry="2" />
<text  x="467.16" y="143.5" >d..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (98 samples, 0.16%)</title><rect x="813.2" y="181" width="1.9" height="15.0" fill="rgb(234,146,17)" rx="2" ry="2" />
<text  x="816.20" y="191.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.01%)</title><rect x="35.5" y="101" width="0.1" height="15.0" fill="rgb(223,96,11)" rx="2" ry="2" />
<text  x="38.48" y="111.5" ></text>
</g>
<g >
<title>skb_recv_datagram (1,240 samples, 2.08%)</title><rect x="726.2" y="101" width="24.5" height="15.0" fill="rgb(212,144,13)" rx="2" ry="2" />
<text  x="729.20" y="111.5" >s..</text>
</g>
<g >
<title>_raw_spin_lock (40 samples, 0.07%)</title><rect x="45.7" y="149" width="0.8" height="15.0" fill="rgb(209,48,33)" rx="2" ry="2" />
<text  x="48.74" y="159.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (29 samples, 0.05%)</title><rect x="487.5" y="165" width="0.5" height="15.0" fill="rgb(233,163,31)" rx="2" ry="2" />
<text  x="490.47" y="175.5" ></text>
</g>
<g >
<title>__fdget_pos (7 samples, 0.01%)</title><rect x="1136.6" y="149" width="0.2" height="15.0" fill="rgb(211,49,2)" rx="2" ry="2" />
<text  x="1139.64" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,677 samples, 11.18%)</title><rect x="204.9" y="197" width="131.9" height="15.0" fill="rgb(243,155,17)" rx="2" ry="2" />
<text  x="207.92" y="207.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>_copy_to_iter (111 samples, 0.19%)</title><rect x="723.7" y="53" width="2.2" height="15.0" fill="rgb(208,115,48)" rx="2" ry="2" />
<text  x="726.69" y="63.5" ></text>
</g>
<g >
<title>kfree (79 samples, 0.13%)</title><rect x="65.3" y="133" width="1.6" height="15.0" fill="rgb(247,133,47)" rx="2" ry="2" />
<text  x="68.31" y="143.5" ></text>
</g>
<g >
<title>__fget_light (16 samples, 0.03%)</title><rect x="485.3" y="117" width="0.3" height="15.0" fill="rgb(252,9,27)" rx="2" ry="2" />
<text  x="488.30" y="127.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (31 samples, 0.05%)</title><rect x="712.8" y="133" width="0.6" height="15.0" fill="rgb(234,105,24)" rx="2" ry="2" />
<text  x="715.83" y="143.5" ></text>
</g>
<g >
<title>__fget_light (741 samples, 1.24%)</title><rect x="49.6" y="117" width="14.7" height="15.0" fill="rgb(236,184,41)" rx="2" ry="2" />
<text  x="52.63" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (91 samples, 0.15%)</title><rect x="670.4" y="213" width="1.8" height="15.0" fill="rgb(233,5,44)" rx="2" ry="2" />
<text  x="673.38" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (73 samples, 0.12%)</title><rect x="1136.6" y="197" width="1.4" height="15.0" fill="rgb(230,100,4)" rx="2" ry="2" />
<text  x="1139.60" y="207.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1,030 samples, 1.72%)</title><rect x="384.6" y="213" width="20.4" height="15.0" fill="rgb(232,205,39)" rx="2" ry="2" />
<text  x="387.63" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.01%)</title><rect x="35.5" y="69" width="0.1" height="15.0" fill="rgb(228,40,43)" rx="2" ry="2" />
<text  x="38.50" y="79.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,323 samples, 7.24%)</title><rect x="68.4" y="165" width="85.4" height="15.0" fill="rgb(233,173,24)" rx="2" ry="2" />
<text  x="71.43" y="175.5" >syscall_ex..</text>
</g>
<g >
<title>__fget_light (6 samples, 0.01%)</title><rect x="1136.7" y="133" width="0.1" height="15.0" fill="rgb(245,118,47)" rx="2" ry="2" />
<text  x="1139.66" y="143.5" ></text>
</g>
<g >
<title>__cond_resched (42 samples, 0.07%)</title><rect x="762.4" y="85" width="0.8" height="15.0" fill="rgb(220,37,19)" rx="2" ry="2" />
<text  x="765.35" y="95.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.02%)</title><rect x="1060.6" y="149" width="0.2" height="15.0" fill="rgb(237,202,26)" rx="2" ry="2" />
<text  x="1063.59" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11 samples, 0.02%)</title><rect x="670.1" y="213" width="0.2" height="15.0" fill="rgb(247,170,54)" rx="2" ry="2" />
<text  x="673.08" y="223.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.01%)</title><rect x="763.0" y="53" width="0.2" height="15.0" fill="rgb(223,195,43)" rx="2" ry="2" />
<text  x="766.02" y="63.5" ></text>
</g>
<g >
<title>__x64_sys_write (48 samples, 0.08%)</title><rect x="1136.6" y="181" width="1.0" height="15.0" fill="rgb(230,163,40)" rx="2" ry="2" />
<text  x="1139.60" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (58 samples, 0.10%)</title><rect x="463.0" y="133" width="1.2" height="15.0" fill="rgb(246,136,29)" rx="2" ry="2" />
<text  x="466.01" y="143.5" ></text>
</g>
<g >
<title>aa_sk_perm (282 samples, 0.47%)</title><rect x="758.0" y="101" width="5.5" height="15.0" fill="rgb(207,54,41)" rx="2" ry="2" />
<text  x="760.97" y="111.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (6 samples, 0.01%)</title><rect x="253.3" y="37" width="0.1" height="15.0" fill="rgb(228,61,49)" rx="2" ry="2" />
<text  x="256.30" y="47.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (12 samples, 0.02%)</title><rect x="153.8" y="181" width="0.3" height="15.0" fill="rgb(206,219,51)" rx="2" ry="2" />
<text  x="156.83" y="191.5" ></text>
</g>
<g >
<title>mq_setattr (8,533 samples, 14.29%)</title><rect x="430.1" y="213" width="168.6" height="15.0" fill="rgb(231,5,11)" rx="2" ry="2" />
<text  x="433.10" y="223.5" >mq_setattr</text>
</g>
<g >
<title>__do_sys_mq_getsetattr (12 samples, 0.02%)</title><rect x="460.0" y="165" width="0.3" height="15.0" fill="rgb(235,199,33)" rx="2" ry="2" />
<text  x="463.05" y="175.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (124 samples, 0.21%)</title><rect x="723.5" y="101" width="2.4" height="15.0" fill="rgb(232,122,28)" rx="2" ry="2" />
<text  x="726.48" y="111.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (348 samples, 0.58%)</title><rect x="1053.9" y="165" width="6.9" height="15.0" fill="rgb(207,128,7)" rx="2" ry="2" />
<text  x="1056.89" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (120 samples, 0.20%)</title><rect x="154.1" y="181" width="2.3" height="15.0" fill="rgb(241,225,53)" rx="2" ry="2" />
<text  x="157.07" y="191.5" ></text>
</g>
<g >
<title>do_mq_timedreceive (1,030 samples, 1.72%)</title><rect x="46.5" y="149" width="20.4" height="15.0" fill="rgb(246,121,43)" rx="2" ry="2" />
<text  x="49.53" y="159.5" ></text>
</g>
<g >
<title>__entry_text_start (883 samples, 1.48%)</title><rect x="433.7" y="197" width="17.4" height="15.0" fill="rgb(206,76,0)" rx="2" ry="2" />
<text  x="436.70" y="207.5" ></text>
</g>
<g >
<title>kill_fasync (20 samples, 0.03%)</title><rect x="239.7" y="101" width="0.4" height="15.0" fill="rgb(232,112,40)" rx="2" ry="2" />
<text  x="242.71" y="111.5" ></text>
</g>
<g >
<title>__librt_disable_asynccancel (1,210 samples, 2.03%)</title><rect x="359.2" y="213" width="23.9" height="15.0" fill="rgb(247,70,2)" rx="2" ry="2" />
<text  x="362.22" y="223.5" >_..</text>
</g>
<g >
<title>__x64_sys_mq_timedreceive (18 samples, 0.03%)</title><rect x="41.0" y="181" width="0.4" height="15.0" fill="rgb(207,27,11)" rx="2" ry="2" />
<text  x="44.01" y="191.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (26 samples, 0.04%)</title><rect x="573.5" y="149" width="0.5" height="15.0" fill="rgb(250,174,13)" rx="2" ry="2" />
<text  x="576.52" y="159.5" ></text>
</g>
<g >
<title>fput (7 samples, 0.01%)</title><rect x="233.7" y="133" width="0.1" height="15.0" fill="rgb(210,211,1)" rx="2" ry="2" />
<text  x="236.70" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.04%)</title><rect x="204.5" y="197" width="0.4" height="15.0" fill="rgb(206,179,31)" rx="2" ry="2" />
<text  x="207.48" y="207.5" ></text>
</g>
<g >
<title>__fdget (2,057 samples, 3.44%)</title><rect x="766.9" y="133" width="40.7" height="15.0" fill="rgb(241,89,41)" rx="2" ry="2" />
<text  x="769.94" y="143.5" >__f..</text>
</g>
<g >
<title>sysvec_irq_work (7 samples, 0.01%)</title><rect x="35.5" y="181" width="0.1" height="15.0" fill="rgb(243,89,5)" rx="2" ry="2" />
<text  x="38.48" y="191.5" ></text>
</g>
<g >
<title>__librt_enable_asynccancel (76 samples, 0.13%)</title><rect x="383.1" y="213" width="1.5" height="15.0" fill="rgb(251,49,33)" rx="2" ry="2" />
<text  x="386.12" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (354 samples, 0.59%)</title><rect x="1062.9" y="197" width="7.0" height="15.0" fill="rgb(250,142,34)" rx="2" ry="2" />
<text  x="1065.90" y="207.5" ></text>
</g>
<g >
<title>all (59,733 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(222,127,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>common_file_perm (23 samples, 0.04%)</title><rect x="253.6" y="85" width="0.5" height="15.0" fill="rgb(214,107,22)" rx="2" ry="2" />
<text  x="256.63" y="95.5" ></text>
</g>
<g >
<title>__entry_text_start (2,488 samples, 4.17%)</title><rect x="620.0" y="213" width="49.1" height="15.0" fill="rgb(241,135,35)" rx="2" ry="2" />
<text  x="622.98" y="223.5" >__en..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (121 samples, 0.20%)</title><rect x="330.9" y="149" width="2.4" height="15.0" fill="rgb(236,132,41)" rx="2" ry="2" />
<text  x="333.91" y="159.5" ></text>
</g>
<g >
<title>__errno_location (51 samples, 0.09%)</title><rect x="179.1" y="213" width="1.0" height="15.0" fill="rgb(233,92,37)" rx="2" ry="2" />
<text  x="182.14" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.01%)</title><rect x="35.5" y="85" width="0.1" height="15.0" fill="rgb(208,196,51)" rx="2" ry="2" />
<text  x="38.50" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (78 samples, 0.13%)</title><rect x="743.9" y="53" width="1.5" height="15.0" fill="rgb(235,136,54)" rx="2" ry="2" />
<text  x="746.90" y="63.5" ></text>
</g>
<g >
<title>__entry_text_start (927 samples, 1.55%)</title><rect x="186.1" y="197" width="18.3" height="15.0" fill="rgb(251,95,39)" rx="2" ry="2" />
<text  x="189.09" y="207.5" ></text>
</g>
<g >
<title>__do_sys_mq_getsetattr (1,327 samples, 2.22%)</title><rect x="460.3" y="149" width="26.2" height="15.0" fill="rgb(221,111,30)" rx="2" ry="2" />
<text  x="463.29" y="159.5" >_..</text>
</g>
<g >
<title>__fget_light (15 samples, 0.03%)</title><rect x="233.4" y="133" width="0.3" height="15.0" fill="rgb(229,22,0)" rx="2" ry="2" />
<text  x="236.40" y="143.5" ></text>
</g>
<g >
<title>sock_recvmsg (2,796 samples, 4.68%)</title><rect x="708.3" y="149" width="55.2" height="15.0" fill="rgb(223,70,51)" rx="2" ry="2" />
<text  x="711.30" y="159.5" >sock_..</text>
</g>
<g >
<title>inet_recvmsg (33 samples, 0.06%)</title><rect x="707.3" y="149" width="0.6" height="15.0" fill="rgb(223,12,31)" rx="2" ry="2" />
<text  x="710.30" y="159.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (12 samples, 0.02%)</title><rect x="64.0" y="101" width="0.3" height="15.0" fill="rgb(245,125,40)" rx="2" ry="2" />
<text  x="67.03" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_mq_getsetattr (18 samples, 0.03%)</title><rect x="456.9" y="181" width="0.4" height="15.0" fill="rgb(242,199,25)" rx="2" ry="2" />
<text  x="459.91" y="191.5" ></text>
</g>
<g >
<title>raw_recvmsg (43 samples, 0.07%)</title><rect x="751.4" y="133" width="0.8" height="15.0" fill="rgb(227,217,54)" rx="2" ry="2" />
<text  x="754.39" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,353 samples, 7.29%)</title><rect x="488.0" y="165" width="86.0" height="15.0" fill="rgb(241,50,16)" rx="2" ry="2" />
<text  x="491.04" y="175.5" >syscall_ex..</text>
</g>
<g >
<title>__libc_read (9,065 samples, 15.18%)</title><rect x="180.1" y="213" width="179.1" height="15.0" fill="rgb(211,70,38)" rx="2" ry="2" />
<text  x="183.15" y="223.5" >__libc_read</text>
</g>
<g >
<title>__fdget (7 samples, 0.01%)</title><rect x="45.6" y="149" width="0.1" height="15.0" fill="rgb(254,213,0)" rx="2" ry="2" />
<text  x="48.60" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_read (8 samples, 0.01%)</title><rect x="209.4" y="181" width="0.1" height="15.0" fill="rgb(216,190,1)" rx="2" ry="2" />
<text  x="212.38" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (9 samples, 0.02%)</title><rect x="246.1" y="69" width="0.1" height="15.0" fill="rgb(254,198,50)" rx="2" ry="2" />
<text  x="249.07" y="79.5" ></text>
</g>
<g >
<title>kfree_skbmem (7 samples, 0.01%)</title><rect x="726.0" y="69" width="0.1" height="15.0" fill="rgb(211,10,31)" rx="2" ry="2" />
<text  x="728.97" y="79.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (6 samples, 0.01%)</title><rect x="64.3" y="117" width="0.1" height="15.0" fill="rgb(210,27,26)" rx="2" ry="2" />
<text  x="67.27" y="127.5" ></text>
</g>
<g >
<title>__fget_light (1,997 samples, 3.34%)</title><rect x="767.7" y="117" width="39.5" height="15.0" fill="rgb(252,185,53)" rx="2" ry="2" />
<text  x="770.75" y="127.5" >__f..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (16 samples, 0.03%)</title><rect x="153.5" y="149" width="0.3" height="15.0" fill="rgb(254,217,14)" rx="2" ry="2" />
<text  x="156.52" y="159.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (916 samples, 1.53%)</title><rect x="161.0" y="197" width="18.1" height="15.0" fill="rgb(242,12,28)" rx="2" ry="2" />
<text  x="164.04" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10 samples, 0.02%)</title><rect x="670.1" y="197" width="0.2" height="15.0" fill="rgb(218,93,22)" rx="2" ry="2" />
<text  x="673.10" y="207.5" ></text>
</g>
<g >
<title>__fdget (20 samples, 0.03%)</title><rect x="705.7" y="149" width="0.4" height="15.0" fill="rgb(208,30,5)" rx="2" ry="2" />
<text  x="708.74" y="159.5" ></text>
</g>
<g >
<title>__fget_light (885 samples, 1.48%)</title><rect x="467.6" y="101" width="17.5" height="15.0" fill="rgb(232,104,35)" rx="2" ry="2" />
<text  x="470.63" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (58 samples, 0.10%)</title><rect x="686.4" y="197" width="1.1" height="15.0" fill="rgb(208,96,37)" rx="2" ry="2" />
<text  x="689.40" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (220 samples, 0.37%)</title><rect x="576.5" y="197" width="4.3" height="15.0" fill="rgb(205,16,33)" rx="2" ry="2" />
<text  x="579.50" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (370 samples, 0.62%)</title><rect x="248.0" y="101" width="7.3" height="15.0" fill="rgb(251,203,5)" rx="2" ry="2" />
<text  x="251.00" y="111.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (114 samples, 0.19%)</title><rect x="574.2" y="181" width="2.3" height="15.0" fill="rgb(213,48,48)" rx="2" ry="2" />
<text  x="577.25" y="191.5" ></text>
</g>
<g >
<title>__sys_recvfrom (5,574 samples, 9.33%)</title><rect x="698.0" y="165" width="110.1" height="15.0" fill="rgb(252,12,49)" rx="2" ry="2" />
<text  x="700.99" y="175.5" >__sys_recvfrom</text>
</g>
<g >
<title>do_mq_getsetattr (18 samples, 0.03%)</title><rect x="487.1" y="149" width="0.4" height="15.0" fill="rgb(240,189,16)" rx="2" ry="2" />
<text  x="490.11" y="159.5" ></text>
</g>
<g >
<title>common_file_perm (191 samples, 0.32%)</title><rect x="249.9" y="69" width="3.7" height="15.0" fill="rgb(232,166,29)" rx="2" ry="2" />
<text  x="252.86" y="79.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (119 samples, 0.20%)</title><rect x="151.2" y="149" width="2.3" height="15.0" fill="rgb(241,105,47)" rx="2" ry="2" />
<text  x="154.17" y="159.5" ></text>
</g>
<g >
<title>rcu_all_qs (29 samples, 0.05%)</title><rect x="246.3" y="69" width="0.5" height="15.0" fill="rgb(252,138,4)" rx="2" ry="2" />
<text  x="249.26" y="79.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (110 samples, 0.18%)</title><rect x="723.7" y="37" width="2.2" height="15.0" fill="rgb(221,223,8)" rx="2" ry="2" />
<text  x="726.71" y="47.5" ></text>
</g>
<g >
<title>[unknown] (29,904 samples, 50.06%)</title><rect x="10.6" y="229" width="590.7" height="15.0" fill="rgb(222,98,33)" rx="2" ry="2" />
<text  x="13.59" y="239.5" >[unknown]</text>
</g>
<g >
<title>__fget_light (10 samples, 0.02%)</title><rect x="64.4" y="133" width="0.2" height="15.0" fill="rgb(209,213,16)" rx="2" ry="2" />
<text  x="67.38" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,133 samples, 33.70%)</title><rect x="672.2" y="213" width="397.7" height="15.0" fill="rgb(210,87,12)" rx="2" ry="2" />
<text  x="675.17" y="223.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>exit_to_user_mode_prepare (124 samples, 0.21%)</title><rect x="571.1" y="149" width="2.4" height="15.0" fill="rgb(240,198,0)" rx="2" ry="2" />
<text  x="574.07" y="159.5" ></text>
</g>
<g >
<title>__skb_recv_datagram (1,030 samples, 1.72%)</title><rect x="729.9" y="85" width="20.3" height="15.0" fill="rgb(211,20,36)" rx="2" ry="2" />
<text  x="732.90" y="95.5" ></text>
</g>
<g >
<title>aa_sk_perm (68 samples, 0.11%)</title><rect x="756.3" y="117" width="1.4" height="15.0" fill="rgb(224,185,18)" rx="2" ry="2" />
<text  x="759.31" y="127.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (57 samples, 0.10%)</title><rect x="687.5" y="197" width="1.2" height="15.0" fill="rgb(223,126,39)" rx="2" ry="2" />
<text  x="690.54" y="207.5" ></text>
</g>
<g >
<title>new_sync_read (13 samples, 0.02%)</title><rect x="234.3" y="133" width="0.2" height="15.0" fill="rgb(221,54,16)" rx="2" ry="2" />
<text  x="237.27" y="143.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (113 samples, 0.19%)</title><rect x="745.4" y="53" width="2.3" height="15.0" fill="rgb(235,105,29)" rx="2" ry="2" />
<text  x="748.44" y="63.5" ></text>
</g>
<g >
<title>mq_getattr (9 samples, 0.02%)</title><rect x="429.8" y="213" width="0.2" height="15.0" fill="rgb(250,143,32)" rx="2" ry="2" />
<text  x="432.82" y="223.5" ></text>
</g>
<g >
<title>skb_free_datagram (14 samples, 0.02%)</title><rect x="725.9" y="101" width="0.3" height="15.0" fill="rgb(237,49,24)" rx="2" ry="2" />
<text  x="728.93" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (12 samples, 0.02%)</title><rect x="750.0" y="69" width="0.2" height="15.0" fill="rgb(242,22,0)" rx="2" ry="2" />
<text  x="753.01" y="79.5" ></text>
</g>
<g >
<title>apparmor_file_permission (200 samples, 0.33%)</title><rect x="249.7" y="85" width="3.9" height="15.0" fill="rgb(220,9,29)" rx="2" ry="2" />
<text  x="252.68" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (11 samples, 0.02%)</title><rect x="244.4" y="85" width="0.2" height="15.0" fill="rgb(239,54,10)" rx="2" ry="2" />
<text  x="247.43" y="95.5" ></text>
</g>
<g >
<title>__fget_light (890 samples, 1.49%)</title><rect x="215.7" y="117" width="17.6" height="15.0" fill="rgb(230,158,14)" rx="2" ry="2" />
<text  x="218.72" y="127.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.01%)</title><rect x="35.5" y="117" width="0.1" height="15.0" fill="rgb(222,106,49)" rx="2" ry="2" />
<text  x="38.48" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (252 samples, 0.42%)</title><rect x="336.8" y="197" width="5.0" height="15.0" fill="rgb(250,79,32)" rx="2" ry="2" />
<text  x="339.82" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,895 samples, 9.87%)</title><rect x="457.6" y="181" width="116.4" height="15.0" fill="rgb(244,69,42)" rx="2" ry="2" />
<text  x="460.58" y="191.5" >do_syscall_64</text>
</g>
<g >
<title>kfree (18 samples, 0.03%)</title><rect x="67.0" y="149" width="0.4" height="15.0" fill="rgb(215,103,52)" rx="2" ry="2" />
<text  x="70.03" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.06%)</title><rect x="451.3" y="197" width="0.7" height="15.0" fill="rgb(213,62,17)" rx="2" ry="2" />
<text  x="454.30" y="207.5" ></text>
</g>
<g >
<title>iov_iter_init (14 samples, 0.02%)</title><rect x="237.5" y="117" width="0.3" height="15.0" fill="rgb(222,52,54)" rx="2" ry="2" />
<text  x="240.53" y="127.5" ></text>
</g>
<g >
<title>_copy_to_user (31 samples, 0.05%)</title><rect x="486.5" y="149" width="0.6" height="15.0" fill="rgb(219,168,13)" rx="2" ry="2" />
<text  x="489.50" y="159.5" ></text>
</g>
<g >
<title>__fdget_pos (922 samples, 1.54%)</title><rect x="215.2" y="133" width="18.2" height="15.0" fill="rgb(220,12,14)" rx="2" ry="2" />
<text  x="218.19" y="143.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.02%)</title><rect x="1060.6" y="133" width="0.2" height="15.0" fill="rgb(238,17,10)" rx="2" ry="2" />
<text  x="1063.59" y="143.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11 samples, 0.02%)</title><rect x="574.0" y="181" width="0.2" height="15.0" fill="rgb(235,107,4)" rx="2" ry="2" />
<text  x="577.03" y="191.5" ></text>
</g>
<g >
<title>__sys_recvfrom (48 samples, 0.08%)</title><rect x="696.6" y="181" width="1.0" height="15.0" fill="rgb(216,17,9)" rx="2" ry="2" />
<text  x="699.65" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7 samples, 0.01%)</title><rect x="35.5" y="133" width="0.1" height="15.0" fill="rgb(211,79,17)" rx="2" ry="2" />
<text  x="38.48" y="143.5" ></text>
</g>
<g >
<title>pipe_read (291 samples, 0.49%)</title><rect x="241.1" y="101" width="5.8" height="15.0" fill="rgb(248,133,5)" rx="2" ry="2" />
<text  x="244.15" y="111.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (2,196 samples, 3.68%)</title><rect x="1138.4" y="229" width="43.4" height="15.0" fill="rgb(215,61,40)" rx="2" ry="2" />
<text  x="1141.44" y="239.5" >__pt..</text>
</g>
<g >
<title>do_syscall_64 (5,676 samples, 9.50%)</title><rect x="41.7" y="181" width="112.1" height="15.0" fill="rgb(237,42,0)" rx="2" ry="2" />
<text  x="44.71" y="191.5" >do_syscall_64</text>
</g>
<g >
<title>fpregs_assert_state_consistent (39 samples, 0.07%)</title><rect x="332.5" y="133" width="0.8" height="15.0" fill="rgb(249,172,19)" rx="2" ry="2" />
<text  x="335.53" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (5,852 samples, 9.80%)</title><rect x="697.6" y="181" width="115.6" height="15.0" fill="rgb(242,226,14)" rx="2" ry="2" />
<text  x="700.60" y="191.5" >__x64_sys_recv..</text>
</g>
<g >
<title>mutex_unlock (8 samples, 0.01%)</title><rect x="1136.9" y="117" width="0.2" height="15.0" fill="rgb(239,7,7)" rx="2" ry="2" />
<text  x="1139.92" y="127.5" ></text>
</g>
<g >
<title>ksys_write (47 samples, 0.08%)</title><rect x="1136.6" y="165" width="0.9" height="15.0" fill="rgb(250,30,1)" rx="2" ry="2" />
<text  x="1139.60" y="175.5" ></text>
</g>
<g >
<title>_copy_to_user (12 samples, 0.02%)</title><rect x="461.8" y="133" width="0.2" height="15.0" fill="rgb(205,13,44)" rx="2" ry="2" />
<text  x="464.81" y="143.5" ></text>
</g>
<g >
<title>__skb_recv_datagram (47 samples, 0.08%)</title><rect x="722.5" y="101" width="1.0" height="15.0" fill="rgb(236,107,40)" rx="2" ry="2" />
<text  x="725.53" y="111.5" ></text>
</g>
<g >
<title>udp-sniff (59,733 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(235,185,21)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >udp-sniff</text>
</g>
<g >
<title>__pthread_enable_asynccancel (214 samples, 0.36%)</title><rect x="1181.8" y="229" width="4.2" height="15.0" fill="rgb(251,108,44)" rx="2" ry="2" />
<text  x="1184.82" y="239.5" ></text>
</g>
<g >
<title>fput (15 samples, 0.03%)</title><rect x="808.1" y="165" width="0.3" height="15.0" fill="rgb(206,199,19)" rx="2" ry="2" />
<text  x="811.10" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (40 samples, 0.07%)</title><rect x="67.6" y="165" width="0.8" height="15.0" fill="rgb(235,51,31)" rx="2" ry="2" />
<text  x="70.64" y="175.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (119 samples, 0.20%)</title><rect x="723.5" y="69" width="2.4" height="15.0" fill="rgb(253,193,47)" rx="2" ry="2" />
<text  x="726.54" y="79.5" ></text>
</g>
<g >
<title>__errno_location (65 samples, 0.11%)</title><rect x="601.3" y="229" width="1.3" height="15.0" fill="rgb(224,105,15)" rx="2" ry="2" />
<text  x="604.33" y="239.5" ></text>
</g>
<g >
<title>vfs_write (37 samples, 0.06%)</title><rect x="1136.8" y="149" width="0.7" height="15.0" fill="rgb(235,80,18)" rx="2" ry="2" />
<text  x="1139.80" y="159.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (881 samples, 1.47%)</title><rect x="341.8" y="197" width="17.4" height="15.0" fill="rgb(212,152,29)" rx="2" ry="2" />
<text  x="344.82" y="207.5" ></text>
</g>
<g >
<title>aa_file_perm (9 samples, 0.02%)</title><rect x="249.7" y="69" width="0.2" height="15.0" fill="rgb(251,129,46)" rx="2" ry="2" />
<text  x="252.68" y="79.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1,139 samples, 1.91%)</title><rect x="405.0" y="213" width="22.5" height="15.0" fill="rgb(248,42,53)" rx="2" ry="2" />
<text  x="407.97" y="223.5" >_..</text>
</g>
<g >
<title>__x64_sys_mq_timedreceive (1,163 samples, 1.95%)</title><rect x="44.4" y="165" width="23.0" height="15.0" fill="rgb(246,173,8)" rx="2" ry="2" />
<text  x="47.41" y="175.5" >_..</text>
</g>
<g >
<title>__cond_resched (9 samples, 0.02%)</title><rect x="757.8" y="101" width="0.2" height="15.0" fill="rgb(211,88,29)" rx="2" ry="2" />
<text  x="760.79" y="111.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (16 samples, 0.03%)</title><rect x="457.3" y="181" width="0.3" height="15.0" fill="rgb(247,149,9)" rx="2" ry="2" />
<text  x="460.26" y="191.5" ></text>
</g>
<g >
<title>copy_page_to_iter (9 samples, 0.02%)</title><rect x="244.6" y="85" width="0.2" height="15.0" fill="rgb(242,32,36)" rx="2" ry="2" />
<text  x="247.64" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_mq_getsetattr (1,376 samples, 2.30%)</title><rect x="460.3" y="165" width="27.2" height="15.0" fill="rgb(216,177,11)" rx="2" ry="2" />
<text  x="463.29" y="175.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (49 samples, 0.08%)</title><rect x="462.0" y="133" width="1.0" height="15.0" fill="rgb(223,6,39)" rx="2" ry="2" />
<text  x="465.04" y="143.5" ></text>
</g>
<g >
<title>fput (8 samples, 0.01%)</title><rect x="66.9" y="149" width="0.1" height="15.0" fill="rgb(226,142,40)" rx="2" ry="2" />
<text  x="69.87" y="159.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (298 samples, 0.50%)</title><rect x="757.7" y="117" width="5.8" height="15.0" fill="rgb(235,81,28)" rx="2" ry="2" />
<text  x="760.65" y="127.5" ></text>
</g>
<g >
<title>rcu_all_qs (18 samples, 0.03%)</title><rect x="763.2" y="85" width="0.3" height="15.0" fill="rgb(244,202,40)" rx="2" ry="2" />
<text  x="766.18" y="95.5" ></text>
</g>
<g >
<title>sock_recvmsg (70 samples, 0.12%)</title><rect x="811.1" y="165" width="1.4" height="15.0" fill="rgb(231,2,40)" rx="2" ry="2" />
<text  x="814.11" y="175.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (57 samples, 0.10%)</title><rect x="572.4" y="133" width="1.1" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="575.39" y="143.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (95 samples, 0.16%)</title><rect x="1058.7" y="149" width="1.9" height="15.0" fill="rgb(215,18,34)" rx="2" ry="2" />
<text  x="1061.71" y="159.5" ></text>
</g>
<g >
<title>new_sync_read (460 samples, 0.77%)</title><rect x="237.8" y="117" width="9.1" height="15.0" fill="rgb(247,227,17)" rx="2" ry="2" />
<text  x="240.81" y="127.5" ></text>
</g>
<g >
<title>vfs_read (1,030 samples, 1.72%)</title><rect x="235.2" y="133" width="20.3" height="15.0" fill="rgb(214,186,43)" rx="2" ry="2" />
<text  x="238.18" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,092 samples, 10.20%)</title><rect x="36.1" y="197" width="120.3" height="15.0" fill="rgb(218,90,39)" rx="2" ry="2" />
<text  x="39.10" y="207.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>preempt_schedule_common (8 samples, 0.01%)</title><rect x="763.0" y="69" width="0.2" height="15.0" fill="rgb(220,148,48)" rx="2" ry="2" />
<text  x="766.02" y="79.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (20 samples, 0.03%)</title><rect x="333.8" y="181" width="0.4" height="15.0" fill="rgb(253,63,39)" rx="2" ry="2" />
<text  x="336.80" y="191.5" ></text>
</g>
<g >
<title>vfs_read (10 samples, 0.02%)</title><rect x="255.5" y="149" width="0.2" height="15.0" fill="rgb(218,179,16)" rx="2" ry="2" />
<text  x="258.53" y="159.5" ></text>
</g>
<g >
<title>fput_many (22 samples, 0.04%)</title><rect x="233.8" y="133" width="0.5" height="15.0" fill="rgb(233,39,54)" rx="2" ry="2" />
<text  x="236.84" y="143.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (59 samples, 0.10%)</title><rect x="806.0" y="101" width="1.2" height="15.0" fill="rgb(222,135,16)" rx="2" ry="2" />
<text  x="809.03" y="111.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (21 samples, 0.04%)</title><rect x="749.6" y="69" width="0.4" height="15.0" fill="rgb(251,187,31)" rx="2" ry="2" />
<text  x="752.59" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,276 samples, 10.51%)</title><rect x="209.8" y="181" width="124.0" height="15.0" fill="rgb(254,83,48)" rx="2" ry="2" />
<text  x="212.82" y="191.5" >do_syscall_64</text>
</g>
<g >
<title>fsnotify (7 samples, 0.01%)</title><rect x="247.9" y="101" width="0.1" height="15.0" fill="rgb(227,115,16)" rx="2" ry="2" />
<text  x="250.86" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_read (2,182 samples, 3.65%)</title><rect x="212.6" y="165" width="43.1" height="15.0" fill="rgb(234,208,14)" rx="2" ry="2" />
<text  x="215.62" y="175.5" >__x6..</text>
</g>
<g >
<title>syscall_return_via_sysret (902 samples, 1.51%)</title><rect x="580.8" y="197" width="17.9" height="15.0" fill="rgb(248,195,26)" rx="2" ry="2" />
<text  x="583.85" y="207.5" ></text>
</g>
<g >
<title>ksys_read (2,148 samples, 3.60%)</title><rect x="213.1" y="149" width="42.4" height="15.0" fill="rgb(241,40,23)" rx="2" ry="2" />
<text  x="216.10" y="159.5" >ksy..</text>
</g>
<g >
<title>sniff_packets (199 samples, 0.33%)</title><rect x="1186.0" y="229" width="4.0" height="15.0" fill="rgb(248,225,21)" rx="2" ry="2" />
<text  x="1189.05" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (50 samples, 0.08%)</title><rect x="256.0" y="165" width="1.0" height="15.0" fill="rgb(253,128,25)" rx="2" ry="2" />
<text  x="258.98" y="175.5" ></text>
</g>
<g >
<title>mutex_lock (102 samples, 0.17%)</title><rect x="244.8" y="85" width="2.0" height="15.0" fill="rgb(210,201,50)" rx="2" ry="2" />
<text  x="247.82" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.04%)</title><rect x="35.6" y="197" width="0.5" height="15.0" fill="rgb(218,24,21)" rx="2" ry="2" />
<text  x="38.62" y="207.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (69 samples, 0.12%)</title><rect x="711.5" y="133" width="1.3" height="15.0" fill="rgb(234,35,37)" rx="2" ry="2" />
<text  x="714.47" y="143.5" ></text>
</g>
<g >
<title>[udp-sniff] (46 samples, 0.08%)</title><rect x="10.6" y="213" width="0.9" height="15.0" fill="rgb(220,40,16)" rx="2" ry="2" />
<text  x="13.59" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,711 samples, 4.54%)</title><rect x="1082.9" y="213" width="53.5" height="15.0" fill="rgb(249,108,18)" rx="2" ry="2" />
<text  x="1085.89" y="223.5" >sysca..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (657 samples, 1.10%)</title><rect x="1069.9" y="213" width="13.0" height="15.0" fill="rgb(207,169,14)" rx="2" ry="2" />
<text  x="1072.89" y="223.5" ></text>
</g>
<g >
<title>rw_verify_area (410 samples, 0.69%)</title><rect x="247.2" y="117" width="8.1" height="15.0" fill="rgb(229,157,12)" rx="2" ry="2" />
<text  x="250.21" y="127.5" ></text>
</g>
<g >
<title>__fdget (761 samples, 1.27%)</title><rect x="49.4" y="133" width="15.0" height="15.0" fill="rgb(216,157,29)" rx="2" ry="2" />
<text  x="52.35" y="143.5" ></text>
</g>
<g >
<title>import_single_range (137 samples, 0.23%)</title><rect x="808.4" y="165" width="2.7" height="15.0" fill="rgb(234,162,20)" rx="2" ry="2" />
<text  x="811.40" y="175.5" ></text>
</g>
<g >
<title>fput (9 samples, 0.02%)</title><rect x="212.9" y="149" width="0.2" height="15.0" fill="rgb(224,151,18)" rx="2" ry="2" />
<text  x="215.92" y="159.5" ></text>
</g>
<g >
<title>new_sync_write (30 samples, 0.05%)</title><rect x="1136.8" y="133" width="0.6" height="15.0" fill="rgb(220,9,39)" rx="2" ry="2" />
<text  x="1139.84" y="143.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (9 samples, 0.02%)</title><rect x="485.1" y="101" width="0.2" height="15.0" fill="rgb(221,213,47)" rx="2" ry="2" />
<text  x="488.12" y="111.5" ></text>
</g>
<g >
<title>__skb_try_recv_datagram (23 samples, 0.04%)</title><rect x="750.2" y="85" width="0.5" height="15.0" fill="rgb(239,20,51)" rx="2" ry="2" />
<text  x="753.24" y="95.5" ></text>
</g>
<g >
<title>mutex_lock (13 samples, 0.02%)</title><rect x="240.1" y="101" width="0.3" height="15.0" fill="rgb(220,135,39)" rx="2" ry="2" />
<text  x="243.10" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (96 samples, 0.16%)</title><rect x="747.7" y="53" width="1.9" height="15.0" fill="rgb(245,66,27)" rx="2" ry="2" />
<text  x="750.68" y="63.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (20 samples, 0.03%)</title><rect x="232.9" y="101" width="0.4" height="15.0" fill="rgb(240,143,8)" rx="2" ry="2" />
<text  x="235.91" y="111.5" ></text>
</g>
<g >
<title>fput (10 samples, 0.02%)</title><rect x="486.3" y="133" width="0.2" height="15.0" fill="rgb(214,52,43)" rx="2" ry="2" />
<text  x="489.30" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_free (7 samples, 0.01%)</title><rect x="726.0" y="53" width="0.1" height="15.0" fill="rgb(217,108,24)" rx="2" ry="2" />
<text  x="728.97" y="63.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 0.02%)</title><rect x="255.7" y="165" width="0.3" height="15.0" fill="rgb(233,121,35)" rx="2" ry="2" />
<text  x="258.73" y="175.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,921 samples, 3.22%)</title><rect x="713.4" y="133" width="38.0" height="15.0" fill="rgb(238,159,41)" rx="2" ry="2" />
<text  x="716.44" y="143.5" >ine..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (69 samples, 0.12%)</title><rect x="1060.8" y="165" width="1.3" height="15.0" fill="rgb(208,123,36)" rx="2" ry="2" />
<text  x="1063.77" y="175.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.01%)</title><rect x="247.7" y="101" width="0.2" height="15.0" fill="rgb(230,3,31)" rx="2" ry="2" />
<text  x="250.75" y="111.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (22 samples, 0.04%)</title><rect x="247.3" y="101" width="0.4" height="15.0" fill="rgb(245,82,18)" rx="2" ry="2" />
<text  x="250.31" y="111.5" ></text>
</g>
<g >
<title>aa_file_perm (102 samples, 0.17%)</title><rect x="251.4" y="53" width="2.0" height="15.0" fill="rgb(247,227,53)" rx="2" ry="2" />
<text  x="254.40" y="63.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (7 samples, 0.01%)</title><rect x="35.5" y="149" width="0.1" height="15.0" fill="rgb(230,125,24)" rx="2" ry="2" />
<text  x="38.48" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (12,503 samples, 20.93%)</title><rect x="815.1" y="181" width="247.0" height="15.0" fill="rgb(234,53,24)" rx="2" ry="2" />
<text  x="818.14" y="191.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>rcu_read_unlock_strict (19 samples, 0.03%)</title><rect x="484.7" y="85" width="0.4" height="15.0" fill="rgb(246,168,22)" rx="2" ry="2" />
<text  x="487.74" y="95.5" ></text>
</g>
<g >
<title>fput_many (34 samples, 0.06%)</title><rect x="485.6" y="117" width="0.7" height="15.0" fill="rgb(236,13,47)" rx="2" ry="2" />
<text  x="488.63" y="127.5" ></text>
</g>
<g >
<title>irqentry_exit (7 samples, 0.01%)</title><rect x="35.5" y="165" width="0.1" height="15.0" fill="rgb(218,37,30)" rx="2" ry="2" />
<text  x="38.48" y="175.5" ></text>
</g>
<g >
<title>__fget_light (27 samples, 0.05%)</title><rect x="807.6" y="133" width="0.5" height="15.0" fill="rgb(242,19,49)" rx="2" ry="2" />
<text  x="810.57" y="143.5" ></text>
</g>
<g >
<title>do_mq_timedreceive (13 samples, 0.02%)</title><rect x="67.4" y="165" width="0.2" height="15.0" fill="rgb(241,148,16)" rx="2" ry="2" />
<text  x="70.39" y="175.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (21 samples, 0.04%)</title><rect x="153.0" y="133" width="0.4" height="15.0" fill="rgb(247,135,29)" rx="2" ry="2" />
<text  x="156.00" y="143.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (18 samples, 0.03%)</title><rect x="707.9" y="149" width="0.4" height="15.0" fill="rgb(242,226,45)" rx="2" ry="2" />
<text  x="710.95" y="159.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (19 samples, 0.03%)</title><rect x="807.2" y="117" width="0.4" height="15.0" fill="rgb(247,39,13)" rx="2" ry="2" />
<text  x="810.20" y="127.5" ></text>
</g>
</g>
</svg>
